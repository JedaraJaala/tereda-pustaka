{"version":3,"sources":["components/store/action.js","components/Post.js","components/fetch/topicsQuotes.js","components/store/dispatcher.js","components/Posts.js","components/Genres.js","components/Header.js","components/Pictures.js","localStorage.js","components/store/reducers.js","components/fetch/author.js","components/Author.js","App.js","index.js"],"names":["ADD","REMOVE","UPDATE","UPDATEAUTHOR","connect","state","author","dispatch","updateNewAuthor","type","updateAuthor","props","textRef","useRef","useState","copyStatus","setCopyStatus","data","Author","lines","Quote","split","twitterShare","words","replace","authorsName","Display","getShareContent","className","href","onClick","map","line","index","length","size","target","e","current","select","document","execCommand","focus","setTimeout","ref","value","getTopics","genres","a","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","redirect","body","fetch","resp","json","console","log","mapDispatchToProps","addNewGenre","genre","addGenre","removeOldGenre","removeGenre","updateUserFeed","feed","updateFeed","useEffect","fetchData","quote","CurSlide","setCurSlide","selected","includes","handleSlide","direction","ele","getElementById","num","Math","floor","clientWidth","scrollLeft","scrollWidth","id","handleGenres","toLowerCase","style","color","Header","Pictures","Images","counter","setCounter","interval","setInterval","clearInterval","src","url","loadState","serializedState","localStorage","getItem","Quotes","parse","err","defaultState","getAuthor","setFeed","loading","setLoading","initialise","CircularProgress","persistedState","store","createStore","action","newState","push","tmp","filtered","filter","App","pictures","exact","path","subscribe","setItem","saveState","getState","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.678f834d.chunk.js","sourcesContent":["export const ADD = \"ADD\";\nexport const addGenre = (genre) => ({\n  type: ADD,\n  genre\n});\n\nexport const REMOVE = \"REMOVE\";\nexport const removeGenre = (genre) => ({\n  type: REMOVE,\n  genre\n});\n\nexport const UPDATE = \"UPDATE\";\nexport const updateFeed = (feed) => ({\n  type: UPDATE,\n  feed\n});\n\nexport const UPDATEAUTHOR = \"ADDAUTHOR\";\nexport const updateAuthor = (author) => ({\n  type: UPDATEAUTHOR,\n  author\n});\n","import \"./Post.scss\";\nimport { useRef, useState } from \"react\";\nimport { Menu, Book, Heart, Star, Twitter, Copy } from \"react-feather\";\nimport { updateAuthor } from \"./store/action.js\";\nimport { connect } from \"react-redux\";\n\nfunction getLines(quote) {\n  return quote.split(/[,]+/);\n}\n\nfunction Post(props) {\n  const textRef = useRef(null);\n  const [copyStatus, setCopyStatus] = useState(\"copy text\");\n  const author = props.data.Author;\n\n  function copyToClipBoard(e) {\n    textRef.current.select();\n    document.execCommand(\"copy\");\n    e.target.focus();\n    setCopyStatus(\"copied\");\n    setTimeout(() => {\n      setCopyStatus(\"copy text\");\n    }, 3000);\n  }\n\n  function setAuthor() {\n    props.updateNewAuthor(author);\n  }\n  function getShareContent() {\n    let words = props.data.Quote;\n    words = words.replace(/\\s/g, \"+\");\n    let authorsName = props.data.Display;\n    authorsName = authorsName.replace(/\\s/g, \"+\");\n    return words + \"+-+\" + authorsName;\n  }\n\n  let lines = getLines(props.data.Quote);\n  let twitterShare =\n    \"https://twitter.com/intent/tweet?text=\" + getShareContent();\n  return (\n    <div className=\"post\">\n      <div className=\"post-titlebar\">\n        <span>{<Book />}</span>\n        <a href=\"/author\" onClick={() => setAuthor()}>\n          <span className=\"author-username\">{props.data.Display}</span>\n        </a>\n        <span className=\"titlebar-menu\">\n          <Menu />\n        </span>\n      </div>\n      <div className=\"post-display\">\n        <div>\n          {lines.map((line, index) => (\n            <p key={index}>{line + (index === lines.length - 1 ? \"\" : \",\")}</p>\n          ))}\n        </div>\n      </div>\n      <div className=\"reaction-bar\">\n        <span>\n          <Heart size={30} />\n        </span>\n        <a href={twitterShare} target=\"_blank\">\n          <span>\n            <Twitter size={30} />\n          </span>\n        </a>\n        <span className=\"translate-to-english\" onClick={copyToClipBoard}>\n          <Copy size={30} />\n          <div className=\"translate-tooltip\">{copyStatus}</div>\n        </span>\n      </div>\n      <textarea ref={textRef} value={props.data.Quote}></textarea>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    author: state[0].author\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateNewAuthor: (author) => {\n      dispatch(updateAuthor(author));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\n","export default async function getTopics(genres) {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  var raw = JSON.stringify({ genres: genres });\n\n  var requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    redirect: \"follow\"\n  };\n  if (genres.length > 0) {\n    requestOptions.body = raw;\n  }\n  let resp = await fetch(\n    \"https://tereda-pustaka.herokuapp.com/api/quotes/topics\",\n    requestOptions\n  );\n  resp = resp.json();\n  console.log(resp, \"here\");\n  return resp;\n}\n","import { addGenre, removeGenre, updateFeed } from \"./action\";\n\nexport const mapDispatchToProps = (dispatch) => {\n  return {\n    addNewGenre: (genre) => {\n      dispatch(addGenre(genre));\n    },\n    removeOldGenre: (genre) => {\n      dispatch(removeGenre(genre));\n    },\n    updateUserFeed: (feed) => {\n      dispatch(updateFeed(feed));\n    }\n  };\n};\n","import Post from \"./Post.js\";\nimport { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport getTopics from \"./fetch/topicsQuotes\";\nimport { mapDispatchToProps } from \"./store/dispatcher.js\";\nimport { Backdrop } from \"@material-ui/core\";\n\nfunction Posts(props) {\n  const [isLoading, setLoading] = useState(true);\n  const [feed, setFeed] = useState([]);\n\n  const myReq = async (_params) => {\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      if (props.genres.length === 0 || props.feed.length === 0) {\n        let resp = await getTopics([]);\n        props.updateUserFeed(resp);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"posts\">\n      {props.feed?\n      props.feed.map((quote, index) => (\n        <Post key={index} data={quote} />\n      )):null}\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    genres: state[0].genres,\n    feed: state[0].feed\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n","import \"./Genres.scss\";\nimport { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport getTopics from \"./fetch/topicsQuotes.js\";\nimport { mapDispatchToProps } from \"./store/dispatcher.js\";\n\nconst genres = [\n  \"Kannada Abhimaana\",\n  \"Motivation\",\n  \"Wisdom\",\n  \"Love\",\n  \"Love Failure\",\n  \"Moral\",\n  \"Sad\",\n  \"Humor\",\n  \"Mother Sentiment\",\n  \"Proverbs\"\n];\n\nfunction Genres(props) {\n  const [CurSlide, setCurSlide] = useState(\"left\");\n\n  async function handleGenres(selected) {\n    if (props.genres.includes(selected)) {\n      props.removeOldGenre(selected);\n      let resp = await getTopics(props.genres);\n      props.updateUserFeed(resp);\n    } else {\n      props.addNewGenre(selected);\n      let resp = await getTopics(props.genres);\n      props.updateUserFeed(resp);\n    }\n  }\n\n  function handleSlide(direction) {\n    var ele = document.getElementById(\"genre-display\");\n    var num = Math.floor(ele.clientWidth);\n    if (CurSlide === 0 && direction === \"left\") {\n      setCurSlide(0);\n    } else {\n      if (direction === \"left\") {\n        ele.scrollLeft -= num - 10;\n      } else {\n        setCurSlide(CurSlide + 1);\n        ele.scrollLeft += num - 10;\n      }\n    }\n    if (ele.scrollLeft === 0) {\n      setCurSlide(\"left\");\n    } else if (ele.scrollLeft + ele.clientWidth === ele.scrollWidth) {\n      setCurSlide(\"right\");\n    } else {\n      setCurSlide(\"center\");\n    }\n  }\n\n  useEffect(() => {\n    var ele = document.getElementById(\"genre-display\");\n    ele.scrollLeft = 0;\n  }, []);\n\n  return (\n    <div className=\"genres\" id=\"genres\">\n      <div\n        className={\n          CurSlide === \"left\" ? \"arrow-left arrow-hidden\" : \"arrow-left\"\n        }\n        onClick={() => handleSlide(\"left\")}\n      >\n        <span>{\"<\"}</span>\n      </div>\n      <div\n        className={\n          CurSlide === \"right\" ? \"arrow-right arrow-hidden\" : \"arrow-right\"\n        }\n        onClick={() => handleSlide(\"right\")}\n      >\n        <span>{\">\"}</span>\n      </div>\n      <div className=\"genre-display\" id=\"genre-display\">\n        {genres.map((genre, index) => (\n          <span\n            key={index}\n            onClick={() => {\n              handleGenres(genre.toLowerCase());\n            }}\n            style={\n              props.genres.includes(genre.toLowerCase())\n                ? { color: \"#b87ea4\" }\n                : {}\n            }\n          >\n            {genre}\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    genres: state[0].genres,\n    feed: state[0].feed\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Genres);\n","import \"./Header.scss\";\nimport { Search } from \"react-feather\";\nexport default function Header() {\n  return (\n    <div className=\"header\">\n      <a href=\"/\">\n        <h1 className=\"header-title\">ತೆರದ ಪುಸ್ತಕ</h1>\n      </a>\n      <div className=\"search-topics\">\n        <Search size={30} />\n        Topics\n      </div>\n    </div>\n  );\n}\n","import \"./Pictures.scss\";\nimport React, { useEffect, useState } from \"react\";\nimport { Settings } from \"react-feather\";\n\nexport default function Pictures({ Images }) {\n  const [counter, setCounter] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCounter((counter + 1) % 4);\n    }, 8000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  });\n  return (\n    <div className=\"picture\">\n      <img src={Images[counter].url}></img>\n    </div>\n  );\n}\n","import Quotes from \"./quotes.json\";\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) {\n      return [{ genres: [], feed: Quotes, author: \"kuvempu\" }];\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return [{ genres: [], feed: Quotes, author: \"kuvempu\" }];\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (err) {\n    //ignore\n  }\n};\n","import { ADD, UPDATE, REMOVE, UPDATEAUTHOR } from \"./action\";\n\n//define reducer\n\nconst defaultState = [{ genres: [], feed: [], author: \"kuvempu\" }];\n\nexport const genresReducer = (state = defaultState, action) => {\n  let newState = state[0];\n  switch (action.type) {\n    case ADD:\n      newState.genres.push(action.genre);\n      return [newState];\n    case REMOVE:\n      let tmp = newState.genres;\n      let filtered = tmp.filter((value, index, tmp) => value !== action.genre);\n      newState.genres = filtered;\n      return [newState];\n    case UPDATE:\n      newState.feed = action.feed;\n      return [newState];\n    case UPDATEAUTHOR:\n      newState.author = action.author;\n      return [newState];\n    default:\n      return state;\n  }\n};\n","export default async function getAuthor(author) {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  var requestOptions = {\n    method: \"GET\",\n    headers: myHeaders,\n    redirect: \"follow\"\n  };\n\n  let resp = await fetch(\n    `https://tereda-pustaka.herokuapp.com/api/quotes/author?author=${author}`,\n    requestOptions\n  );\n  resp = resp.json();\n  return resp;\n}\n","import getAuthor from \"./fetch/author.js\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Post from \"./Post.js\";\nimport \"./Author.scss\";\nimport { CircularProgress } from \"@material-ui/core\";\nfunction Author(props) {\n  const [feed, setFeed] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function initialise() {\n      let resp = await getAuthor(props.author);\n      setFeed(resp);\n      setLoading(false);\n    }\n    initialise();\n  });\n  if (loading) return <CircularProgress />;\n  else\n    return (\n      <div className=\"author\">\n        <div className=\"posts\">\n          {feed.map((quote, index) => (\n            <Post key={index} data={quote} />\n          ))}\n        </div>\n      </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    author: state[0].author\n  };\n};\n\nexport default connect(mapStateToProps)(Author);\n","import \"./styles.scss\";\nimport Posts from \"./components/Posts.js\";\nimport pictures from \"./pictures.json\";\nimport Genres from \"./components/Genres.js\";\nimport Header from \"./components/Header.js\";\nimport Pictures from \"./components/Pictures.js\";\n//import Author from \"./components/Author\";\n\n//redux\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { saveState, loadState } from \"./localStorage\";\nimport { genresReducer } from \"./components/store/reducers\";\n\n//Router\nimport { Route, Switch } from \"react-router-dom\";\n\n//others\n\nimport React, { useEffect } from \"react\";\nimport Author from \"./components/Author\";\n\n//define persisted state\nconst persistedState = loadState();\n\n// define redux store\nconst store = createStore(genresReducer, persistedState);\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n/*\nconst Author = Loadable({\n  loader: () => import(\"./components/Author\"),\n  loading: CircularProgress\n});\n*/\n\nexport default function App() {\n  useEffect(()=>{\n    loadState()\n  },[])\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header />\n        <div className=\"pictures\">\n          <Pictures Images={pictures} />\n        </div>\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Genres />\n              <Posts />\n            </Route>\n            <Route exact path=\"/author\">\n              <Author />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Provider>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}