{"version":3,"sources":["components/store/action.js","components/fetch/author.js","components/Post.js","components/fetch/topicsQuotes.js","components/store/dispatcher.js","components/Posts.js","components/Genres.js","components/Header.js","components/Pictures.js","localStorage.js","components/store/reducers.js","components/Author.js","App.js","index.js"],"names":["ADD","REMOVE","UPDATE","UPDATEAUTHOR","getAuthor","author","a","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","resp","json","connect","state","dispatch","updateNewAuthor","type","updateAuthor","props","textRef","useRef","useState","copyStatus","setCopyStatus","data","Author","lines","Quote","split","twitterShare","words","replace","authorsName","Display","getShareContent","className","href","path","onClick","map","line","index","length","size","target","e","current","select","document","execCommand","focus","setTimeout","ref","value","getTopics","genres","raw","JSON","stringify","body","console","log","mapDispatchToProps","addNewGenre","genre","addGenre","removeOldGenre","removeGenre","updateUserFeed","feed","updateFeed","useEffect","fetchData","quote","CurSlide","setCurSlide","selected","includes","handleSlide","direction","ele","getElementById","num","Math","floor","clientWidth","scrollLeft","scrollWidth","id","handleGenres","toLowerCase","style","color","process","PATH","Header","Pictures","Images","counter","setCounter","interval","setInterval","clearInterval","src","url","defaultState","application","loadState","serializedState","localStorage","getItem","parse","err","this","tmp","setState","React","Component","persistedState","store","createStore","action","newState","push","filtered","filter","subscribe","getState","setItem","saveState","App","pictures","exact","rootElement","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.08b42944.chunk.js","sourcesContent":["export const ADD = \"ADD\";\nexport const addGenre = (genre) => ({\n  type: ADD,\n  genre\n});\n\nexport const REMOVE = \"REMOVE\";\nexport const removeGenre = (genre) => ({\n  type: REMOVE,\n  genre\n});\n\nexport const UPDATE = \"UPDATE\";\nexport const updateFeed = (feed) => ({\n  type: UPDATE,\n  feed\n});\n\nexport const UPDATEAUTHOR = \"UPDATEAUTHOR\";\nexport const updateAuthor = (author) => ({\n  type: UPDATEAUTHOR,\n  author\n});\n","export default async function getAuthor(author) {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  var requestOptions = {\n    method: \"GET\",\n    headers: myHeaders,\n    redirect: \"follow\"\n  };\n\n  let resp = await fetch(\n    `https://tereda-pustaka.herokuapp.com/api/quotes/author?author=${author}`,\n    requestOptions\n  );\n  resp = resp.json();\n  return resp;\n}\n","import \"./Post.scss\";\nimport { useRef, useState } from \"react\";\nimport { Menu, Book, Heart, Star, Twitter, Copy } from \"react-feather\";\nimport { updateAuthor } from \"./store/action.js\";\nimport { connect } from \"react-redux\";\nimport getAuthor from \"./fetch/author.js\";\nconst path =process.env.PUBLIC_URL;\n\n\nfunction getLines(quote) {\n  return quote.split(/[,]+/);\n}\n\nfunction Post(props) {\n  const textRef = useRef(null);\n  const [copyStatus, setCopyStatus] = useState(\"copy text\");\n  const author = props.data.Author;\n\n  function copyToClipBoard(e) {\n    textRef.current.select();\n    document.execCommand(\"copy\");\n    e.target.focus();\n    setCopyStatus(\"copied\");\n    setTimeout(() => {\n      setCopyStatus(\"copy text\");\n    }, 3000);\n  }\n\nconst setAuthor = ()=> {\n    props.updateNewAuthor(author);\n    \n  }\n  function getShareContent() {\n    let words = props.data.Quote;\n    words = words.replace(/\\s/g, \"+\");\n    let authorsName = props.data.Display;\n    authorsName = authorsName.replace(/\\s/g, \"+\");\n    return words + \"+-+\" + authorsName;\n  }\n\n  let lines = getLines(props.data.Quote);\n  let twitterShare =\n    \"https://twitter.com/intent/tweet?text=\" + getShareContent();\n  return (\n    <div className=\"post\">\n      <div className=\"post-titlebar\">\n        <span>{<Book />}</span>\n        <a href={path+\"/author\"} onClick={() => setAuthor()}>\n          <span className=\"author-username\">{props.data.Display}</span>\n        </a>\n        <span className=\"titlebar-menu\">\n          <Menu />\n        </span>\n      </div>\n      <div className=\"post-display\">\n        <div>\n          {lines.map((line, index) => (\n            <p key={index}>{line + (index === lines.length - 1 ? \"\" : \",\")}</p>\n          ))}\n        </div>\n      </div>\n      <div className=\"reaction-bar\">\n        <span>\n          <Heart size={30} />\n        </span>\n        <a href={twitterShare} target=\"_blank\">\n          <span>\n            <Twitter size={30} />\n          </span>\n        </a>\n        <span className=\"translate-to-english\" onClick={copyToClipBoard}>\n          <Copy size={30} />\n          <div className=\"translate-tooltip\">{copyStatus}</div>\n        </span>\n      </div>\n      <textarea ref={textRef} value={props.data.Quote}></textarea>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    author: state.author\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateNewAuthor: (author) => {\n      dispatch(updateAuthor(author));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\n","export default async function getTopics(genres) {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  var raw = JSON.stringify({ genres: genres });\n\n  var requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    redirect: \"follow\"\n  };\n  if (genres.length > 0) {\n    requestOptions.body = raw;\n  }\n  let resp = await fetch(\n    \"https://tereda-pustaka.herokuapp.com/api/quotes/topics\",\n    requestOptions\n  );\n  resp = resp.json();\n  console.log(resp, \"here\");\n  return resp;\n}\n","import { addGenre, removeGenre, updateFeed } from \"./action\";\n\nexport const mapDispatchToProps = (dispatch) => {\n  return {\n    addNewGenre: (genre) => {\n      dispatch(addGenre(genre));\n    },\n    removeOldGenre: (genre) => {\n      dispatch(removeGenre(genre));\n    },\n    updateUserFeed: (feed) => {\n      dispatch(updateFeed(feed));\n    }\n  };\n};\n","import Post from \"./Post.js\";\nimport { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport getTopics from \"./fetch/topicsQuotes\";\nimport { mapDispatchToProps } from \"./store/dispatcher.js\";\nimport { Backdrop } from \"@material-ui/core\";\n\nfunction Posts(props) {\n  const [isLoading, setLoading] = useState(true);\n  const [feed, setFeed] = useState([]);\n\n  const myReq = async (_params) => {\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      if (props.genres.length === 0 || props.feed.length === 0) {\n        let resp = await getTopics([]);\n        props.updateUserFeed(resp);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"posts\">\n      {props.feed?\n      props.feed.map((quote, index) => (\n        <Post key={index} data={quote} />\n      )):null}\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    genres: state.genres,\n    feed: state.feed\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n","import \"./Genres.scss\";\nimport { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport getTopics from \"./fetch/topicsQuotes.js\";\nimport { mapDispatchToProps } from \"./store/dispatcher.js\";\n\nconst genres = [\n  \"Kannada Abhimaana\",\n  \"Motivation\",\n  \"Wisdom\",\n  \"Love\",\n  \"Love Failure\",\n  \"Moral\",\n  \"Sad\",\n  \"Humor\",\n  \"Mother Sentiment\",\n  \"Proverbs\"\n];\n\nfunction Genres(props) {\n  const [CurSlide, setCurSlide] = useState(\"left\");\n\n  async function handleGenres(selected) {\n    if (props.genres.includes(selected)) {\n      props.removeOldGenre(selected);\n      let resp = await getTopics(props.genres);\n      props.updateUserFeed(resp);\n    } else {\n      props.addNewGenre(selected);\n      let resp = await getTopics(props.genres);\n      props.updateUserFeed(resp);\n    }\n  }\n\n  function handleSlide(direction) {\n    var ele = document.getElementById(\"genre-display\");\n    var num = Math.floor(ele.clientWidth);\n    if (CurSlide === 0 && direction === \"left\") {\n      setCurSlide(0);\n    } else {\n      if (direction === \"left\") {\n        ele.scrollLeft -= num - 10;\n      } else {\n        setCurSlide(CurSlide + 1);\n        ele.scrollLeft += num - 10;\n      }\n    }\n    if (ele.scrollLeft === 0) {\n      setCurSlide(\"left\");\n    } else if (ele.scrollLeft + ele.clientWidth === ele.scrollWidth) {\n      setCurSlide(\"right\");\n    } else {\n      setCurSlide(\"center\");\n    }\n  }\n\n  useEffect(() => {\n    var ele = document.getElementById(\"genre-display\");\n    ele.scrollLeft = 0;\n  }, []);\n\n  return (\n    <div className=\"genres\" id=\"genres\">\n      <div\n        className={\n          CurSlide === \"left\" ? \"arrow-left arrow-hidden\" : \"arrow-left\"\n        }\n        onClick={() => handleSlide(\"left\")}\n      >\n        <span>{\"<\"}</span>\n      </div>\n      <div\n        className={\n          CurSlide === \"right\" ? \"arrow-right arrow-hidden\" : \"arrow-right\"\n        }\n        onClick={() => handleSlide(\"right\")}\n      >\n        <span>{\">\"}</span>\n      </div>\n      <div className=\"genre-display\" id=\"genre-display\">\n        {genres.map((genre, index) => (\n          <span\n            key={index}\n            onClick={() => {\n              handleGenres(genre.toLowerCase());\n            }}\n            style={\n              props.genres.includes(genre.toLowerCase())\n                ? { color: \"#b87ea4\" }\n                : {}\n            }\n          >\n            {genre}\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    genres: state.genres,\n    feed: state.feed\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Genres);\n","import \"./Header.scss\";\nimport { Search } from \"react-feather\";\n\nconst path=process.env.PATH||\"/tereda-pustaka\"\n\nexport default function Header() {\n  return (\n    <div className=\"header\">\n      <a href={path+\"/\"}>\n        <h1 className=\"header-title\">ತೆರದ ಪುಸ್ತಕ</h1>\n      </a>\n      <div className=\"search-topics\">\n        <Search size={30} />\n        Topics\n      </div>\n    </div>\n  );\n}\n","import \"./Pictures.scss\";\nimport React, { useEffect, useState } from \"react\";\nimport { Settings } from \"react-feather\";\n\nexport default function Pictures({ Images }) {\n  const [counter, setCounter] = useState(0);\n  \n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCounter((counter + 1) % 4);\n    }, 8000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  });\n  return (\n    <div className=\"picture\">\n      <img src={Images[counter].url}></img>\n    </div>\n  );\n}\n","import Quotes from \"./quotes.json\";\n\nconst defaultState = { \n  genres: [], \n  feed: Quotes,\n   author: \"kuvempu\",\n   application:\"teredapustaka\" \n  }\n\n\nexport const  loadState = () => {\n  try {\n    \n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState !== null && serializedState.application===\"teredapustaka\") {\n      return JSON.parse(serializedState); \n    }\n    return defaultState;\n    \n  } catch (err) {\n    return defaultState;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (err) {\n    //ignore\n  }\n};\n","import { ADD, UPDATE, REMOVE, UPDATEAUTHOR } from \"./action\";\n\n//define reducer\n\nconst defaultState = { \n  genres: [], \n  feed: [],\n   author: \"\",\n   application:\"teredapustaka\" \n  }\n\nexport const genresReducer = (state = defaultState, action) => {\n  let newState = {...state};\n  switch (action.type) {\n    case ADD:\n      newState.genres.push(action.genre);\n      return newState;\n    case REMOVE:\n      let tmp = newState.genres;\n      let filtered = tmp.filter((value, index, tmp) => value !== action.genre);\n      newState.genres = filtered;\n      return newState;\n    case UPDATE:\n      newState.feed = action.feed;\n      return newState;\n    case UPDATEAUTHOR:\n      return {...state,author:action.author};\n    default:\n      return state;\n  }\n};\n","import getAuthor from \"./fetch/author.js\";\nimport { connect } from \"react-redux\";\nimport Post from \"./Post.js\";\nimport \"./Author.scss\";\nimport React from \"react\";\n\nclass Author extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {feed:[]}\n  }\n\n  async componentDidMount(){\n    let tmp =await getAuthor(this.props.author);\n    console.log(this.props.author)\n    this.setState({feed:tmp})\n  }\n  \n  render(){\n    return (\n      <div className=\"author\">\n        <div className=\"posts\">\n          {this.state.feed.map((quote, index) => (\n            <Post key={index} data={quote} />\n          ))}\n        </div>\n      </div>\n    );\n}\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    author: state.author,\n  };\n};\n\nexport default connect(mapStateToProps)(Author);\n","import \"./styles.scss\";\nimport Posts from \"./components/Posts.js\";\nimport pictures from \"./pictures.json\";\nimport Genres from \"./components/Genres.js\";\nimport Header from \"./components/Header.js\";\nimport Pictures from \"./components/Pictures.js\";\n//import Author from \"./components/Author\";\n\n//redux\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { saveState, loadState } from \"./localStorage\";\nimport { genresReducer } from \"./components/store/reducers\";\n\n//Router\nimport { Route, Switch } from \"react-router-dom\";\n\n//others\n\nimport React, { useEffect } from \"react\";\nimport Author from \"./components/Author\";\n\n//define persisted state\nconst persistedState = loadState();\n\n// define redux store\nconst store = createStore(genresReducer, persistedState);\nstore.subscribe(() => {\n  console.log(store.getState().author)\n  saveState(store.getState());\n});\n\n/*\nconst Author = Loadable({\n  loader: () => import(\"./components/Author\"),\n  loading: CircularProgress\n});\n*/\n\nconst path = process.env.path||\"\" ;\n\nexport default function App() {\n  useEffect(()=>{\n    loadState()\n  },[])\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header />\n        <div className=\"pictures\">\n          <Pictures Images={pictures} />\n        </div>\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Genres />\n              <Posts />\n            </Route>\n            <Route exact path=\"/author\">\n              <Author />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Provider>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nconst path = process.env.PUBLIC_URL || \"/tereda-pustaka\"\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <BrowserRouter basename={path}>\n      <App />\n    </BrowserRouter>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}